to setup ;run by observer -> called from dashboard
  reset-model
  load-data
  initialize-neighborhoods
  initialize-neighborhoods-data
  import-citizens
  reset-ticks
end

to reset-model ;run by observer -> to setup
               ;instead of using clear-all, this method prevents the deletion of the GIS map, which is process intensive to load back in. 
  clear-turtles
  clear-globals
  clear-ticks
  clear-all-plots
  clear-output 
end

to go ;run by observer -> called from dashboard
  introduce-new-migrants
  consider-moving
  ;other stuff
  tick
end

to consider-moving ;run by observer -> to go
  ask citizens[
    let move-chance item (position "percent" item 0 movementage-data) item ( age + 1 ) movementage-data
    if random-float 1 < 10 * move-chance [ move-houses ]
  ]
end

to move-houses ;run by citizen -> to consider-moving
               ;here is where the citizen will calculate whether and where to move to. This procedure is very limited in its current form.
  let affordable-neighborhoods neighborhoods with [avg_price * 1000 <= [budget] of myself * 9.35]
  let available-neighborhoods affordable-neighborhoods with [ available_houses > aggregate-cluster-size ]
  let chosen-neighborhood one-of available-neighborhoods
  if not is-agentset? chosen-neighborhood [ error "no neighborhood?" ]
  ask current-neighborhood [set available_houses available_houses + 1]
  move-to chosen-neighborhood
  set current-neighborhood chosen-neighborhood
  ask current-neighborhood [set available_houses available_houses - 1] 
end